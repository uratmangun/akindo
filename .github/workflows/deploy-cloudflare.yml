name: "‚òÅÔ∏è Deploy to Cloudflare Workers"

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  deploy-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: "üì• Checkout code"
        uses: actions/checkout@v4

      - name: "üß∞ Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: "üõ†Ô∏è Setup Bun"
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: "üì¶ Install dependencies"
        run: |
          bun install --frozen-lockfile

      - name: "üèóÔ∏è Build project"
        run: bun run build
        env:
          NODE_ENV: production

      - name: "üõ†Ô∏è Install Wrangler CLI"
        run: bun add --global wrangler@latest

      - name: "‚ÑπÔ∏è Skip Cloudflare deploy"
        if: ${{ hashFiles('wrangler.toml') == '' }}
        run: |
          echo "::notice::Skipping Cloudflare deployment because wrangler.toml was not found in the repository root."

      - name: "‚òÅÔ∏è Deploy Worker"
        id: deploy
        if: ${{ hashFiles('wrangler.toml') != '' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          WRANGLER_ENVIRONMENT: ${{ vars.CLOUDFLARE_ENVIRONMENT }}
        run: |
          if [ ! -f wrangler.toml ]; then
            echo "::error::wrangler.toml not found at repository root. Add the file before running this workflow."
            exit 1
          fi

          if [ -n "$WRANGLER_ENVIRONMENT" ]; then
            DEPLOYMENT_OUTPUT=$(wrangler deploy --env "$WRANGLER_ENVIRONMENT" 2>&1)
          else
            DEPLOYMENT_OUTPUT=$(wrangler deploy 2>&1)
          fi

          DEPLOYMENT_URL=$(echo "$DEPLOYMENT_OUTPUT" | grep -o "https://[^ ]*\.workers\.dev" | head -1)

          if [ -n "$DEPLOYMENT_URL" ]; then
            echo "‚úÖ Deployment URL: $DEPLOYMENT_URL"
            echo "deployment_url=$DEPLOYMENT_URL" >> "$GITHUB_OUTPUT"
          else
            echo "‚ö†Ô∏è Could not extract deployment URL from Wrangler output"
            echo "Full output:"
            echo "$DEPLOYMENT_OUTPUT"
          fi

      - name: "üè∑Ô∏è Update repository homepage URL"
        if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && hashFiles('wrangler.toml') != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';

            if (!deploymentUrl) {
              console.log('No deployment URL found, skipping homepage update');
              return;
            }

            console.log(`Updating repository homepage to: ${deploymentUrl}`);

            try {
              await github.rest.repos.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                homepage: deploymentUrl
              });
              console.log('Successfully updated repository homepage URL');
            } catch (error) {
              console.error('Failed to update repository homepage URL:', error);
              // Don't fail the workflow if homepage update fails
            }
